imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AppBundle/config/services.yml" }
    - { resource: "@MyFirstBundle/Resources/config/services.yml" }
    - { resource: "@BlogBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    translator: ~
#    translator: { fallbacks: [en] }
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        cookie_lifetime: 86400
        gc_maxlifetime: 1200 # session will expire after 10 minutes of inactivity
        gc_probability: 1
        gc_divisor: 1
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form-themes:
#       минус обозначает, что это массив. Аналогично элементу ниже ([...])
        - 'bootstrap_3_horizontal_layout.html.twig'
#        ['bootstrap_3_layout.html.twig']
#       that's the right way to add some unique template from bundle directory
#       ["BlogBundle:Form:bootstrap_3_layout.html.twig"]
#       From app/Resources/views/form    directory
#       ["Form/bootstrap_3_layout.html.twig"]

# Doctrine Configuration
doctrine:
    dbal:
        logging:  false
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  utf8mb4
        default_table_options:
          charset: utf8mb4
          collate: utf8mb4_unicode_ci
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User

easy_admin:
    site_name: "notePeet"
    design:
        color_scheme: 'light'
        brand_color: 'rgb(244, 150, 66)'
        assets:
            favicon: '/img/Client_notes-orange.png'
            css:
                - 'css/EasyBundle/common.css'

    entities:
        Product:
            class: AppBundle\Entity\Product
            label: 'Products'
            list:
                title: "Products Available"
#                actions: ['show']

        Category:
            class: AppBundle\Entity\Category
#            disabled_actions: ['show']            #makes association field titles act as a NOT link  (category in product list)
            list:
#                actions: ['show']

        User:
            class: AppBundle\Entity\User
            form:
#                disable validation of required fields taht are not rendered
                form_options: { validation_groups: false }
                fields:
                    - username
                    - email
                    - enabled
#                    - lastLogin
#                    - {property: 'username_canonical', type_options: {required: false}}
            list:
                fields:
                    - id
                    - username
                    - email
                    - enabled
                    - lastLogin

            new:
                fields:
                    - username
                    - email
                    - password
                    - enabled
                    - salt
                    - roles